# -*- coding: utf-8 -*-
"""gráficoR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19ITbj2BEeZVJAAXPZ-KHzs-0d1hY8Vsw
"""

from google.colab import drive

drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %load_ext rpy2.ipython

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # Carregue as bibliotecas se ainda não o fez
# library(readr)
# library(dplyr)
# library(ggplot2)
# 
# # Carregue seus dados
# df <- read_csv("/content/drive/MyDrive/dados_tratados.csv")
# 
# # Calcule o IMC (convertendo altura de cm para m)
# df <- df %>%
#   mutate(IMC = Peso_kg / (Altura_cm / 100)^2)
# 
# # Verifique a nova coluna
# head(df)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 1. Distribuição de idade por pacientes -----
# ggplot(df, aes(x = Idade)) +
#   geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
#   labs(title = "Distribuição de Idades dos Pacientes",
#        x = "Idade (anos)",
#        y = "Frequência (Número de Pacientes)") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 2. Contagem de pacientes por nível de atividade física -----
# ggplot(df, aes(x = Nivel_Atividade)) +
#   geom_bar(fill = "salmon") +
#   labs(title = "Contagem de Pacientes por Nível de Atividade",
#        x = "Nível de Atividade Física",
#        y = "Número de Pacientes") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 3. Distribuição do status de saúde por sexo -----
# ggplot(df, aes(x = Sexo, fill = Fumante)) +
#   geom_bar(position = "dodge") + # 'position="dodge"' coloca as barras lado a lado
#   labs(title = "Distribuição do Status de Fumante por Sexo",
#        x = "Sexo",
#        y = "Número de Pacientes",
#        fill = "Status de Fumante") +
#   theme_light()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 4. Nível de atividade por sexo -----
# ggplot(dados, aes(x = Nivel_Atividade, fill = Sexo)) +
#   geom_bar(position = "dodge") +
#   labs(title = "Nível de Atividade por Sexo", x = "Nível de Atividade", y = "Contagem") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # Instalar e carregar pacotes
# install.packages("tidyverse")
# install.packages("GGally")  # Para correlações
# library(tidyverse)
# library(GGally)
# 
# # Carregar os dados
# dados <- read_csv("/content/drive/MyDrive/dados_tratados.csv")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 5. Cálculo do IMC -----
# dados <- dados %>%
#   mutate(IMC = Peso_kg / ((Altura_cm / 100)^2))
# 
# # Gráfico: Distribuição do IMC
# ggplot(dados, aes(x = IMC)) +
#   geom_histogram(bins = 30, fill = "lightgreen", color = "black") +
#   labs(title = "Distribuição do IMC", x = "IMC", y = "Frequência") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 6. Hipertensão -----
# dados <- dados %>%
#   mutate(Hipertenso = ifelse(Pressao_Sistolica >= 140 | Pressao_Diastolica >= 90, "Sim", "Não"))
# # Gráfico: Percentual de Hipertensos por Sexo
# ggplot(dados, aes(x = Sexo, fill = Hipertenso)) +
#   geom_bar(position = "fill") +
#   scale_y_continuous(labels = scales::percent) +
#   labs(title = "Proporção de Hipertensos por Sexo", y = "%", x = "Sexo") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 7. Classificação da Qualidade do Sono -----
# dados <- dados %>%
#   mutate(Qualidade_Sono = case_when(
#     Horas_Sono < 5 ~ "Muito Baixo",
#     Horas_Sono < 6.5 ~ "Baixo",
#     Horas_Sono < 8 ~ "Adequado",
#     TRUE ~ "Ótimo"
#   ))
# 
# # Gráfico: Qualidade do Sono por Histórico de Doença
# ggplot(dados, aes(x = Qualidade_Sono, fill = Historico_Doenca)) +
#   geom_bar(position = "dodge") +
#   labs(title = "Qualidade do Sono por Histórico de Doença", x = "Qualidade do Sono", y = "Contagem") +
#   theme_minimal()

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 8. Faixas Etárias -----
# dados <- dados %>%
#   mutate(Faixa_Etaria = cut(Idade,
#                             breaks = c(0, 30, 45, 60, 75, 100),
#                             labels = c("<=30", "31-45", "46-60", "61-75", "76+")))
# 
# # Gráfico: Fumantes por Faixa Etária
# ggplot(dados, aes(x = Faixa_Etaria, fill = Fumante)) +
#   geom_bar(position = "fill") +
#   scale_y_continuous(labels = scales::percent) +
#   labs(title = "Proporção de Fumantes por Faixa Etária", x = "Faixa Etária", y = "%") +
#   theme_minimal()
#

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 9. Correlação entre variáveis numéricas -----
# # Selecionar apenas as variáveis numéricas mais relevantes
# dados_numericos <- dados %>%
#   select(Idade, Peso_kg, Altura_cm, IMC, Horas_Sono, Pressao_Sistolica, Pressao_Diastolica, Consumo_Alcool_semanal_ml)
# 
# # Gráfico: Matriz de Correlação
# ggpairs(dados_numericos, title = "Matriz de Correlação entre Variáveis Numéricas")
#

# Commented out IPython magic to ensure Python compatibility.
# %%R
# # ----- 10. Índice de Risco de Saúde -----
# dados <- dados %>%
#   mutate(Alcool_Excessivo = Consumo_Alcool_semanal_ml > 300,
#          Sono_Baixo = Horas_Sono < 6,
#          Risco = rowSums(across(c(Hipertenso, Fumante, Alcool_Excessivo, Sono_Baixo), ~ . == TRUE | . == "Sim")))
# 
# # Gráfico: Risco médio por Nível de Atividade
# ggplot(dados, aes(x = Nivel_Atividade, y = Risco)) +
#   stat_summary(fun = mean, geom = "bar", fill = "tomato", color = "black") +
#   labs(title = "Risco Médio por Nível de Atividade", x = "Nível de Atividade", y = "Risco (0 a 4)") +
#   theme_minimal()